#!/bin/env bash

# My not-so minimal bspwm config!!!
# This configuration is specifically targetted for my needs. Feel free to modify as you
# see fit for your system.
# USE AT YOUR OWN RISK! I will not be held responsible for any damages or pain from using this
# config.

install_msg() {
	echo ""
	echo "$@"
}

# Creates a symlink for item1 to item2, deleting destination if it exists
link() {
	if [ -d $1 ] ; then
		status='!'
		[ ! -e $2 ] || rm -rf $2
		ln -sf $1 $2 && status='ok'
		install_msg "$status - Symlinking $1 to $2"
	fi
}

xbps_install() {
	echo "packages = $@..."
	sudo xbps-install -y "$@"
}

install_xorg() {
	xbps_install base-devel git curl wget xtools \
		xorg-minimal xinit xauth xorg-server xf86-input-libinput xf86-video-intel \
		xrdb xrandr xset xsetroot xprop xcalib xdg-utils \
		xsel xdo setxkbmap xmodmap bash-completion ccache git ntfs-3g wireless_tools
}

install_audio() {
	xbps_install alsa-utils alsa-plugins-pulseaudio
}

install_bspwm_minimal() {
	xbps_install arandr bspwm sxhkd kitty rofi polybar dunst geany pcmanfm \
		lxappearance vim mpd mpc ncmpcpp mpv w3m w3m-img neofetch \
		htop zathura zathura-pdf-mupdf maim xclip feh \
		file-roller zip unzip p7zip meld ghex gnome-calculator jq \
		font-libertine-ttf noto-fonts-emoji arc-icon-theme
}

install_misc_apps() {
	xbps_install bc highlight fzf atool mediainfo poppler youtube-dl ffmpeg \
		atool ImageMagick python3-Pillow xdotool xdpyinfo ffmpegthumbnailer \
		speedtest-cli geoip geoip-data
}

install_extra_apps() {
	xbps_install firefox viewnior cava ranger 
}

install_fonts_themes() {
	xbps_install fonts-croscore-ttf gtk-engine-murrine
}

install_system_utils() {
	xbps_install android-tools gvfs gvfs-mtp polkit-gnome gnome-keyring

	# enable services
	sudo ln -sf /etc/sv/polkitd /var/service/ # required for automounts through gvfs
}

install_elogind() {
	# required for rootless xorg
	xbps_install dbus-elogind dbus-elogind-libs dbus-elogind-x11 elogind

	sudo ln -sf /etc/sv/dbus /var/service/
	sudo ln -sf /etc/sv/elogind /var/service/
}

install_other_apps() {
	xbps_install libreoffice-calc libreoffice-draw libreoffice-math libreoffice-writer \
        libreoffice-i18n-en-US-6.4.5.2_1 vscode gimp
}

install_networkmanager() {
	xbps_install NetworkManager

	sudo sv d dhcpcd
	sudo sv d wpa_supplicant
	sudo rm /var/service/dhcpcd
	sudo rm /var/service/wpa_supplicant
	sudo ln -sf /etc/sv/dbus /var/service/
	sudo ln -sf /etc/sv/NetworkManager /var/service/
	sudo sv u NetworkManager

	echo 'polkit.addRule(function(action, subject) {
  if (action.id.indexOf("org.freedesktop.NetworkManager.") == 0 && subject.isInGroup("network")) {
	return polkit.Result.YES;
  }
});' | sudo tee /etc/polkit-1/rules.d/50-org.freedesktop.NetworkManager.rules
}

configure_system() {
	# configure fonts
	install_msg "Configuring system fonts config"
	sudo ln -sf /usr/share/fontconfig/conf.avail/10-hinting-slight.conf /etc/fonts/conf.d/
	sudo ln -sf /usr/share/fontconfig/conf.avail/10-sub-pixel-rgb.conf /etc/fonts/conf.d/
	sudo ln -sf /usr/share/fontconfig/conf.avail/11-lcdfilter-default.conf /etc/fonts/conf.d/
	sudo ln -sf /usr/share/fontconfig/conf.avail/50-user.conf /etc/fonts/conf.d/
	sudo ln -sf /usr/share/fontconfig/conf.avail/70-no-bitmaps.conf /etc/fonts/conf.d/
}

check_intel() {
	# Detect if we are on an Intel system
	CPU_VENDOR=$(grep vendor_id /proc/cpuinfo | awk 'NR==1{print $3}')
	if [ $CPU_VENDOR = "GenuineIntel" ]; then
		install_msg "Installing Intel Video Driver"
		xbps_install libva-intel-driver
		install_msg "Install Intel Xorg config"
		sudo bash -c 'cat > /usr/share/X11/xorg.conf.d/20-intel.conf' << EOF
# /usr/share/X11/xorg.conf.d/20-intel.conf

Section "Device"
   Identifier  "Intel Graphics"
   Driver      "intel"
#   Option     "SwapbuffersWait"       "false"
   Option "DRI" "3"
   Option      "TearFree"     "true"
EndSection
EOF
	fi
}

# symlinks to commonly used folders/apps

create_symlinks() {
	# symlinks to HOME
	link /mnt/data/Documents $HOME/Documents
	link /mnt/data/Downloads $HOME/Downloads
	link /mnt/data/Pictures $HOME/Pictures

	link /mnt/storage/Music $HOME/Music

	link /mnt/data/myfiles/.mozilla $HOME/.mozilla
	link /mnt/data/myfiles/#ssh_key/.ssh $HOME/.ssh

	# symlinks to .config
	link /mnt/data/myfiles/BraveSoftware $HOME/.config/BraveSoftware
	link /mnt/data/retroarch $HOME/.config/retroarch
	link /mnt/data/myfiles/transmission-daemon $HOME/.config/transmission-daemon
}

cleanup() {
	# remove unnecessary services
	remove_svc="agetty-tty3 agetty-tty4 agetty-tty5 agetty-tty6 sshd"
	for svc in $remove_svc
	do
		if [ -d /var/service/$svc ] ; then
			install_msg "Removing $svc"
			sudo rm /var/service/$svc
		fi
	done
}

echo -e "\e[31mChecking permissions...\e[0m"
if [ "$EUID" -eq 0 ]; then
	echo "Please do not run this script as root (e.g. using sudo)"
	exit
fi

install_msg "Updating and installing packages."
sudo xbps-install -Su

install_msg "Installing xorg and stuff"
install_xorg

install_msg "Installing audio"
install_audio

install_msg "Installing window manager (bspwm)"
install_bspwm_minimal

install_msg "Installing misc/support apps"
install_misc_apps

install_msg "Installing desktop apps"
install_extra_apps

install_msg "Installing fonts and themes"
install_fonts_themes

install_msg "Installing office suite, code and graphix editors"
install_other_apps

install_msg "Installing system utilities"
install_system_utils

install_msg "Checking for intel chipset"
check_intel

install_msg "Installing elogind"
install_elogind

install_msg "Configuring new system"
configure_system

install_msg "Creating application symlinks"
create_symlinks

install_msg "Finalizing and cleanup"
cleanup

if [ -f $HOME/.ssh/id_rsa ] ; then
    eval "$(ssh-agent -s)"
    ssh-add $HOME/.ssh/id_rsa
fi

# switch shell to zsh
#chsh -s /bin/zsh $USERNAME
#exec zsh

echo "Finished."
echo ""
echo "To use rootless Xorg, xorg-server needs to be compiled with elogind support."
echo "Compile: # './xbps-src pkg xorg-server -o elogind'"
echo "Install: # 'sudo xbps-install --force --repository=hostdir/binpkgs xorg-server'"
echo "Edit '/etc/X11/Xwapper.config' and change 'needs_root_rights' from 'yes' to 'no'"
echo ""
